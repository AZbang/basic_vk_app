{"version":3,"sources":["sw.js","reducers/loading.js","reducers/movies.js","reducers/vk.js","sagas/imdb.js","sagas/index.js","store.js","reducers/index.js","components/CardMovie.js","getters/index.js","containers/CardMoviesList.js","actions/index.js","containers/MainView.js","containers/SearchView.js","containers/BookmarksView.js","containers/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","reducer","arguments","length","undefined","type","initialState","Immutable","searchQuery","search","popular","bookmarks","friends","all","action","merge","query","data","concat","movie","filter","m","id","accessToken","searchMovies","getPopularMovies","moviedb","MovieDb","API_KEYS","TMDB_API","movies","regenerator_default","a","wrap","_context","prev","next","put","call","searchMulti","language","sent","results","t0","stop","_marked","this","_context2","discoverMovie","_marked2","rootSaga","takeEvery","sagas_marked","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","router","connectRouter","vk","loading","applyMiddleware","routerMiddleware","run","CardMovie","render","react_default","createElement","className","style","backgroundImage","url","size","getImage","_this","props","poster_path","onClick","isBookmarks","onRemoveBookmarks","onAddBookmarks","favorite_default","fill","favorite_outline_default","React","Component","CardMoviesList","getCardMoviesList","map","react_flexbox_grid_lib","xs","key","src_components_CardMovie","some","removeBookmarks","addBookmarks","dispatch","fluid","connect","MainView","vkui","activePanel","title","containers_CardMoviesList","height","SearchView","timeId","onChange","clearTimeout","setTimeout","noShadow","BookmarksView","App","onStoryChange","e","push","currentTarget","dataset","story","activeRoute","pageId","insets","isWebView","activeStory","tabbar","selected","data-story","search_default","label","keyboard_bots_outline_default","containers_MainView","containers_SearchView","containers_BookmarksView","ReactDOM","es","lib","Route","path","component","containers_App","params","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b239d8fe.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","const reducer = (state=false, action) => {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return true;\r\n    case 'LOADING_END':\r\n      return false;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import Immutable from 'seamless-immutable';\r\n\r\nconst initialState = Immutable({\r\n  searchQuery: '',\r\n  search: [],\r\n  popular: [],\r\n  bookmarks: [],\r\n  friends: [],\r\n  all: []\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_SEARCH_MOVIES':\r\n      return state.merge({searchQuery: action.query})\r\n    case 'SET_SEARCH_MOVIES':\r\n      return state.merge({search: action.data});\r\n    case 'SET_POPULAR_MOVIES':\r\n      return state.merge({popular: action.data});\r\n    case 'ADD_TO_BOOKMARKS':\r\n      return state.merge({bookmarks: state.bookmarks.concat([action.movie])})\r\n    case 'REMOVE_FROM_BOOKMARKS':\r\n      return state.merge({bookmarks: state.bookmarks.filter((m) => m.id !== action.movie.id)})\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  accessToken: '',\r\n  friends: []\r\n}\r\n\r\nconst reducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_ACCESS_TOKEN':\r\n      return state;\r\n    case 'FETCH_FRIENDS':\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import { call, put } from 'redux-saga/effects'\r\nimport MovieDb from 'moviedb-promise'\r\nimport API_KEYS from '../API_KEYS'\r\n\r\nconst moviedb = new MovieDb(API_KEYS.TMDB_API);\r\n\r\nexport function* searchMovies(action) {\r\n  yield put({type: 'LOADING_START'});\r\n  try {\r\n    const movies = yield call(moviedb.searchMulti, {query: action.query, language: 'ru'});\r\n    yield put({type: 'SET_SEARCH_MOVIES', data: movies.results});\r\n  } catch(e) {\r\n    yield put({type: 'SET_SEARCH_MOVIES', data: []});\r\n  }\r\n  yield put({type: 'LOADING_END'});\r\n}\r\n\r\nexport function* getPopularMovies(action) {\r\n  yield put({type: 'LOADING_START'});\r\n  try {\r\n    const movies = yield call(moviedb.discoverMovie, {language: 'ru'});\r\n    yield put({type: 'SET_POPULAR_MOVIES', data: movies.results});\r\n  } catch(e) {\r\n    yield put({type: 'SET_POPULAR_MOVIES', data: []});\r\n  }\r\n  yield put({type: 'LOADING_END'});\r\n}\r\n\r\nexport function* addMovie(action) {\r\n  const movie = yield call(moviedb.movieInfo, {id: action.id, language: 'ru'});\r\n  yield put({type: 'ADD_MOVIE', movie});\r\n}\r\n","import { takeEvery } from 'redux-saga/effects'\r\nimport { searchMovies, getPopularMovies } from './imdb'\r\n\r\nexport default function* rootSaga() {\r\n  yield takeEvery('FETCH_SEARCH_MOVIES', searchMovies)\r\n  yield takeEvery('FETCH_POPULAR_MOVIES', getPopularMovies)\r\n}\r\n","import { applyMiddleware, compose, createStore } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport createRootReducer from './reducers'\r\nimport rootSaga from './sagas'\r\n\r\nconst history = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  createRootReducer(history),\r\n  composeEnhancer(\r\n    applyMiddleware(\r\n      routerMiddleware(history),\r\n      sagaMiddleware\r\n    ),\r\n  ),\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport {store, history};\r\n","import { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nimport loading from './loading'\r\nimport movies from './movies'\r\nimport vk from './vk'\r\n\r\nexport default (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  vk, movies, loading\r\n});\r\n","import React from 'react'\r\nimport Icon24Favorite from '@vkontakte/icons/dist/24/favorite';\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport {getImage} from '../getters'\r\nimport './CardMovie.css'\r\n\r\nclass CardMovie extends React.Component {\r\n  render = () => (\r\n    <div className=\"card-movie\" style={{backgroundImage: 'url(' + getImage(this.props.data.poster_path) + ')'}}>\r\n      <span className=\"card-movie__bookmarks\" onClick={this.props.isBookmarks ? this.props.onRemoveBookmarks : this.props.onAddBookmarks}>\r\n        {this.props.isBookmarks ? <Icon24Favorite fill=\"#5181B8\"/> : <Icon24FavoriteOutline fill=\"#5181B8\"/>}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardMovie;\r\n","export function getImage(url, size=500) {\r\n  return `https://image.tmdb.org/t/p/w${size}${url}`;\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Grid, Row, Col} from 'react-flexbox-grid';\r\nimport CardMovie from '../components/CardMovie';\r\nimport {addBookmarks, removeBookmarks} from '../actions';\r\n\r\nclass CardMoviesList extends React.Component {\r\n  getCardMoviesList = () => (\r\n    this.props.movies.map((movie) => (\r\n      <Col xs={6} key={movie.id}>\r\n        <CardMovie isBookmarks={this.props.bookmarks.some((m) => m.id === movie.id)} onRemoveBookmarks={() => this.removeBookmarks(movie)} onAddBookmarks={() => this.addBookmarks(movie)} data={movie}/>\r\n      </Col>\r\n    ))\r\n  )\r\n\r\n  addBookmarks = (movie) => {\r\n    this.props.dispatch(addBookmarks(movie));\r\n  }\r\n  removeBookmarks = (movie) => {\r\n    this.props.dispatch(removeBookmarks(movie));\r\n  }\r\n\r\n  render = () => (\r\n    <Grid fluid className='card-movies-list'>\r\n      <Row>\r\n        {this.getCardMoviesList()}\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    bookmarks: state.movies.bookmarks\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardMoviesList);\r\n","export function searchMovies(query) {\r\n  return {type: 'FETCH_SEARCH_MOVIES', query}\r\n}\r\n\r\nexport function getPopularMovies() {\r\n  return {type: 'FETCH_POPULAR_MOVIES'}\r\n}\r\n\r\nexport function addBookmarks(movie) {\r\n  return {type: 'ADD_TO_BOOKMARKS', movie}\r\n}\r\n\r\nexport function removeBookmarks(movie) {\r\n  return {type: 'REMOVE_FROM_BOOKMARKS', movie}\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {View, Panel, PanelHeader, Group, Spinner} from '@vkontakte/vkui';\r\nimport CardMoviesList from './CardMoviesList';\r\nimport {getPopularMovies} from '../actions';\r\n\r\nclass MainView extends React.Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getPopularMovies())\r\n  }\r\n\r\n  render = () => (\r\n    <View id={this.props.id} activePanel={this.props.id}>\r\n      <Panel id={this.props.id}>\r\n        <PanelHeader>#ЧТОПОСМОТРЕТЬ</PanelHeader>\r\n        <Group title=\"НОВИНКИ КИНО\">\r\n          <CardMoviesList movies={this.props.popular}/>\r\n        </Group>\r\n        {this.props.loading ? (<div style={{height: 100}}><Spinner/></div>) : null}\r\n      </Panel>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    popular: state.movies.popular,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainView);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {View, Panel, PanelHeader, Search, Spinner} from '@vkontakte/vkui';\r\nimport {searchMovies} from '../actions';\r\nimport CardMoviesList from './CardMoviesList';\r\n\r\nclass SearchView extends React.Component {\r\n  timeId = null;\r\n\r\n  onChange = (search) => {\r\n    this.timeId && clearTimeout(this.timeId);\r\n    this.timeId = setTimeout(() => {\r\n      this.props.dispatch(searchMovies(search));\r\n    }, 500);\r\n  }\r\n\r\n  render = () => (\r\n    <View id={this.props.id} activePanel={this.props.id}>\r\n      <Panel id={this.props.id}>\r\n        <PanelHeader noShadow>#ЧТОПОСМОТРЕТЬ</PanelHeader>\r\n        <Search onChange={this.onChange}/>\r\n        <br/>\r\n        <CardMoviesList movies={this.props.search}/>\r\n        {this.props.loading ? (<div style={{height: 100}}><Spinner/></div>) : null}\r\n      </Panel>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    search: state.movies.search,\r\n    loading: state.loading\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchView);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {View, Panel, PanelHeader, Group} from '@vkontakte/vkui';\r\nimport CardMoviesList from './CardMoviesList';\r\n\r\nclass BookmarksView extends React.Component {\r\n  render = () => (\r\n    <View id={this.props.id} activePanel={this.props.id}>\r\n      <Panel id={this.props.id}>\r\n        <PanelHeader>#ЧТОПОСМОТРЕТЬ</PanelHeader>\r\n\r\n        <Group title=\"ХОЧУ ПОСМОТРЕТЬ\">\r\n          <CardMoviesList movies={this.props.bookmarks}/>\r\n        </Group>\r\n      </Panel>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    bookmarks: state.movies.bookmarks\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BookmarksView);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {push} from 'connected-react-router';\r\n\r\nimport {ConfigProvider, Epic, Tabbar, TabbarItem} from '@vkontakte/vkui';\r\nimport Icon28KeyboardBotsOutline from '@vkontakte/icons/dist/28/keyboard_bots_outline';\r\nimport Icon24FavoriteOutline from '@vkontakte/icons/dist/24/favorite_outline';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport {isWebView} from '@vkontakte/vkui/src/lib/webview';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport MainView from './MainView';\r\nimport SearchView from './SearchView';\r\nimport BookmarksView from './BookmarksView';\r\n\r\nclass App extends React.Component {\r\n  onStoryChange = (e) =>\r\n    this.props.dispatch(push('/' + e.currentTarget.dataset.story));\r\n\r\n  render() {\r\n    let activeRoute = this.props.pageId || 'main';\r\n\r\n    return (\r\n      <ConfigProvider insets={this.props.insets} isWebView={isWebView}>\r\n        <Epic activeStory={activeRoute} tabbar={\r\n          <Tabbar>\r\n            <TabbarItem\r\n               onClick={this.onStoryChange}\r\n               selected={activeRoute === 'search'}\r\n               data-story=\"search\"\r\n            ><Icon28Search/></TabbarItem>\r\n            <TabbarItem\r\n               onClick={this.onStoryChange}\r\n               selected={activeRoute === 'main'}\r\n               data-story=\"main\"\r\n               label=\"12\"\r\n            ><Icon28KeyboardBotsOutline/></TabbarItem>\r\n            <TabbarItem\r\n               onClick={this.onStoryChange}\r\n               selected={activeRoute === 'bookmarks'}\r\n               data-story=\"bookmarks\"\r\n            ><Icon24FavoriteOutline/></TabbarItem>\r\n          </Tabbar>\r\n        }>\r\n          <MainView id=\"main\" accessToken={this.props.accessToken}/>\r\n          <SearchView id=\"search\" accessToken={this.props.accessToken}/>\r\n          <BookmarksView id=\"bookmarks\" accessToken={this.props.accessToken}/>\r\n        </Epic>\r\n      </ConfigProvider>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {}\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Route } from 'react-router';\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport registerServiceWorker from './sw';\r\nimport {store, history} from './store';\r\nimport App from './containers/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <div>\r\n        <Route path='/:pageId?' component={(props) => <App pageId={props.match.params.pageId}/>}/>\r\n      </div>\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}